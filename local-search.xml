<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>前端入门</title>
    <link href="/2022/08/07/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8/"/>
    <url>/2022/08/07/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="前端入门"><a href="#前端入门" class="headerlink" title="前端入门"></a>前端入门</h2><h3 id="1-弹性盒布局css"><a href="#1-弹性盒布局css" class="headerlink" title="1.弹性盒布局css"></a>1.弹性盒布局css</h3><pre><code class="hljs">display：flex；当前元素下的子元素一行显示；justify-content：space-between; 子元素向两侧弹开；                            left；子元素从左向右分布；                            flex-end;子元素从右向左分布；flex-wrap:wrap; 子元素超出父元素的宽度时自动换行；align-items:center; 子元素垂直居中；flex-direction:column; 弹性盒纵轴排列；</code></pre><h3 id="2-基础页面开发"><a href="#2-基础页面开发" class="headerlink" title="2.基础页面开发"></a>2.基础页面开发</h3><p>​    单个页面开发规范<br>​        文件目录src/pages/当前页面<br>​        文件 index.tsx、index.less<br>​    需要拆分组件规范<br>​        文件目录src/pages/当前页面<br>​        文件 index.tsx、index.less<br>​        组件文件目录src/pages/当前页面/components/组件名<br>​        文件 index.tsx、index.less<br>页面模版：<br>​        </p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//src/pages/当前页面/index.tsx</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> styles <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./index.less&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">PageIndex</span>=(<span class="hljs-params"></span>)=&gt;&#123;<br><span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#123;styles.Box&#125;</span>&gt;</span></span><br><span class="language-xml">  ……</span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-title class_">Default</span> <span class="hljs-title class_">PageIndex</span>;<br><br><span class="hljs-comment">//src/pages/当前页面/index.less</span><br>.<span class="hljs-property">Box</span>&#123;<br><span class="hljs-attr">width</span>:<span class="hljs-number">100</span>%;<br><span class="hljs-attr">height</span>:<span class="hljs-number">100</span>%;<br><span class="hljs-attr">background</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="React-Hooks钩子函数"><a href="#React-Hooks钩子函数" class="headerlink" title="React Hooks钩子函数"></a>React Hooks钩子函数</h4><p>react中钩子函数需要从react中结构。<br>在前端页面开发中常用的钩子函数主要有以下几个</p><p>​    1.useState  声明页面所需变量</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//   变量名   修改参数的方法        初始值</span><br><span class="hljs-keyword">const</span> [count, setCount] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">1</span>)<br><span class="hljs-comment">//案例点击按钮修改count变量</span><br>&lt;<span class="hljs-title class_">Button</span> onClick=<span class="hljs-function">()=&gt;</span>&#123;<br><span class="hljs-title function_">setCount</span>(<span class="hljs-number">2</span>)<br>&#125;&gt;按钮&lt;/<span class="hljs-title class_">Button</span>&gt;<br></code></pre></td></tr></table></figure><p>2.useEffect 监听依赖值</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-comment">//每次修改都会触发</span><br>&#125;)<br><span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-comment">//首次渲染会触发</span><br>&#125;, [])<br><span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-comment">//依赖值变化会触发</span><br>&#125;, [依赖值])<br><span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-function">() =&gt;</span> &#123;&#125;<br>  <span class="hljs-comment">//unmount会触发</span><br>&#125;)<br></code></pre></td></tr></table></figure><p>3.useRef 获取Dom节点</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> rdom = <span class="hljs-title function_">useRef</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br>&lt;div className=<span class="hljs-string">&quot;App&quot;</span> ref=&#123;rdom&#125;&gt;&lt;/div&gt;<br></code></pre></td></tr></table></figure><h4 id="根据数据渲染页面"><a href="#根据数据渲染页面" class="headerlink" title="根据数据渲染页面"></a>根据数据渲染页面</h4><p>根据接口中获取的数据遍历渲染页面</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//案例数据</span><br><span class="hljs-keyword">const</span> data=[<span class="hljs-string">&quot;这是一句话&quot;</span>,<span class="hljs-string">&quot;这是第二句&quot;</span>]<br><span class="hljs-comment">//tsx在标签中渲染数据需要用到js中map方法，因为map方法有返回值（可以return 每一项）。</span><br>&lt;div&gt;<br>&#123;<br><span class="hljs-comment">//map函数的第一个参数item为数组中的每一项，第二个参数index为每一项的下标</span><br>data.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item,index</span>)=&gt;</span>&#123;<br><span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;item&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br>&#125;)<br>&#125;<br>&lt;/div&gt;<br><br><span class="hljs-comment">//数据为对象时</span><br><span class="hljs-keyword">const</span> obj=&#123;<br><span class="hljs-attr">name</span>:<span class="hljs-string">&quot;张三&quot;</span>,<br><span class="hljs-attr">age</span>:<span class="hljs-number">18</span>,<br><span class="hljs-attr">country</span>:<span class="hljs-string">&quot;China&quot;</span><br>&#125;<br><span class="hljs-comment">//这里则需要用到Object.keys方法遍历对象,此方法会返回一个有当前对象所有key组成的数组</span><br><span class="hljs-comment">//Object.keys(obj).map((item,index)=&gt;&#123;</span><br><span class="hljs-keyword">return</span> item <span class="hljs-comment">//此处item会输出 name、age、country</span><br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="3-antd组件库的使用"><a href="#3-antd组件库的使用" class="headerlink" title="3.antd组件库的使用"></a>3.antd组件库的使用</h3><p>在bigfish框架中集成了antd组件库可以直接在页面引入即可。</p><h4 id="1-Form表单组件"><a href="#1-Form表单组件" class="headerlink" title="1.Form表单组件"></a>1.Form表单组件</h4><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//antd中的form提供了很多api，这里展示集中常用的方法</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;<span class="hljs-title class_">Form</span>,<span class="hljs-title class_">Input</span>,<span class="hljs-title class_">Select</span>,<span class="hljs-title class_">Button</span>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">Index</span>=(<span class="hljs-params"></span>)=&gt;&#123;<br><span class="hljs-comment">//第一步声明form事例</span><br><span class="hljs-keyword">const</span> [form]=<span class="hljs-title class_">Form</span>.<span class="hljs-title function_">useForm</span>();<br><span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">//将form事例绑定到标签上</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Form</span> <span class="hljs-attr">form</span>=<span class="hljs-string">&#123;form&#125;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;名称&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        //是否必填。     //错误提示</span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">Please</span> <span class="hljs-attr">input</span> <span class="hljs-attr">your</span> <span class="hljs-attr">username</span>!&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">      &gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;类型&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;type&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">Please</span> <span class="hljs-attr">input</span> <span class="hljs-attr">your</span> <span class="hljs-attr">password</span>!&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">      &gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Select</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Select.Option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;a&quot;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>a<span class="hljs-tag">&lt;/<span class="hljs-name">Select.Option</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Select</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span>=&gt;</span>&#123;</span><br><span class="language-xml">//通过form事例获取表单内容</span><br><span class="language-xml">            const data=form.getFieldValue();</span><br><span class="language-xml">        //返回&#123;</span><br><span class="language-xml">        //  name:内容,</span><br><span class="language-xml">        //  type:内容</span><br><span class="language-xml">        //&#125;</span><br><span class="language-xml">&#125;&#125;&gt;提交<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">Form</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-Table-表格组件"><a href="#2-Table-表格组件" class="headerlink" title="2.Table 表格组件"></a>2.Table 表格组件</h4><p>表格组件需要配置表头columns和传入data</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//展示数据</span><br><span class="hljs-keyword">const</span> dataSource = [<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;胡彦斌&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">32</span>,<br>    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;西湖区湖底公园1号&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;2&#x27;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;胡彦祖&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">42</span>,<br>    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;西湖区湖底公园1号&#x27;</span>,<br>  &#125;,<br>];<br><span class="hljs-comment">//表头</span><br><span class="hljs-keyword">const</span> columns = [<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;name&#x27;</span>,<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;name&#x27;</span>,<br>    <span class="hljs-attr">render</span>:<span class="hljs-function">()=&gt;</span>&#123;<br><span class="hljs-comment">//render函数可以渲染html标签</span><br>      <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br>    &#125;<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;年龄&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;age&#x27;</span>,<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;age&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;住址&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;address&#x27;</span>,<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;address&#x27;</span>,<br>  &#125;,<br>];<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Table</span> <span class="hljs-attr">dataSource</span>=<span class="hljs-string">&#123;dataSource&#125;</span> <span class="hljs-attr">columns</span>=<span class="hljs-string">&#123;columns&#125;</span> /&gt;</span></span><br></code></pre></td></tr></table></figure><p>未完待续……</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>socket.io实现实时通讯</title>
    <link href="/2022/05/30/socket.io%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E9%80%9A%E8%AE%AF/"/>
    <url>/2022/05/30/socket.io%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E9%80%9A%E8%AE%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="socket-io-实现实时通讯"><a href="#socket-io-实现实时通讯" class="headerlink" title="socket.io 实现实时通讯"></a>socket.io 实现实时通讯</h1><h3 id="使用框架：umi"><a href="#使用框架：umi" class="headerlink" title="使用框架：umi"></a>使用框架：umi</h3><h3 id="依赖包："><a href="#依赖包：" class="headerlink" title="依赖包："></a>依赖包：</h3><p>​ <strong>socket.io(启服务)</strong></p><p>​ <strong>socket.io-client(连接服务)</strong></p><h2 id="1-搭建服务"><a href="#1-搭建服务" class="headerlink" title="1.搭建服务"></a>1.搭建服务</h2><p>提示：io 实例可以向所有人发消息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/*构建http服务*/</span><br><span class="hljs-keyword">var</span> app = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>).<span class="hljs-title function_">createServer</span>()<br><span class="hljs-comment">/*引入socket.io*/</span><br><span class="hljs-keyword">var</span> io = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;socket.io&#x27;</span>)(app)<br><span class="hljs-comment">/*定义监听端口，可以自定义，端口不要被占用*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-variable constant_">PORT</span> = <span class="hljs-number">8083</span> <span class="hljs-comment">//此端口需要前端代理</span><br><span class="hljs-comment">/*监听端口*/</span><br><span class="hljs-keyword">var</span> arr = [] <span class="hljs-comment">//用户列表</span><br>app.<span class="hljs-title function_">listen</span>(<span class="hljs-variable constant_">PORT</span>)<br>io.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;connection&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">socket</span>) &#123;<br>  <span class="hljs-comment">//前后端连接</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;有人打开了&#x27;</span>)<br>  socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;login&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">&#123; user &#125;</span>) &#123;<br>    <span class="hljs-comment">//接收到前端发来的登录消息</span><br>    <span class="hljs-keyword">if</span> (arr.<span class="hljs-title function_">indexOf</span>(user) == -<span class="hljs-number">1</span>) &#123;<br>      <span class="hljs-comment">//判断用户名是否被占用</span><br>      arr.<span class="hljs-title function_">push</span>(user)<br>      socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;loginSuccess&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-comment">//向前端发送登陆成功消息</span><br>      io.<span class="hljs-property">sockets</span>.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;add&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-comment">//通过io实例通知所有人有用户登录</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;loginError&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-comment">//向前端发送用户名被占用消息</span><br>    &#125;<br>  &#125;)<br><br>  socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;send&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) &#123;<br>    <span class="hljs-comment">//接收到前端通讯的消息</span><br>    io.<span class="hljs-property">sockets</span>.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;addsay&#x27;</span>, data) <span class="hljs-comment">//通过io实例通知所有人要发的消息</span><br>  &#125;)<br>&#125;)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;app listen at&#x27;</span> + <span class="hljs-variable constant_">PORT</span>) <span class="hljs-comment">//提示</span><br></code></pre></td></tr></table></figure><h2 id="2-前端代理"><a href="#2-前端代理" class="headerlink" title="2.前端代理"></a>2.前端代理</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">proxy</span>:&#123;<br>    <span class="hljs-string">&#x27;/socket.io&#x27;</span>: &#123;<br>      <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;ws://localhost:8083&#x27;</span>,<span class="hljs-comment">//端口号要和后台服务一致</span><br>      <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span><br>    &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><h2 id="3-与服务连接"><a href="#3-与服务连接" class="headerlink" title="3.与服务连接"></a>3.与服务连接</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> io = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;socket.io-client&#x27;</span>)<br><span class="hljs-keyword">const</span> socket = io.<span class="hljs-title function_">connect</span>(<span class="hljs-string">&#x27;/&#x27;</span>)<br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;add&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">//接收服务端的好友登录消息</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;您的好友上线了&#x27;</span>)<br>&#125;)<br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;loginSuccess&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">//接收登陆成功通知</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;上线成功&#x27;</span>)<br>&#125;)<br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;loginError&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">//接收登录失败，用户名被占用通知</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;此昵称已被使用&#x27;</span>)<br>&#125;)<br>socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;addsay&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">&#123; user, title &#125;</span>) &#123;<br>  <span class="hljs-comment">//接收其他用户的消息</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user + <span class="hljs-string">&#x27;:&#x27;</span> + title)<br>&#125;)<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">login</span>(<span class="hljs-params">data</span>) &#123;<br>  <span class="hljs-comment">//向前端组件抛出登录函数</span><br>  socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;login&#x27;</span>, data)<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">send</span>(<span class="hljs-params">data</span>) &#123;<br>  <span class="hljs-comment">//向前端组件抛出发送消息组件</span><br>  socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;send&#x27;</span>, data)<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-前端接收事件并调用"><a href="#4-前端接收事件并调用" class="headerlink" title="4.前端接收事件并调用"></a>4.前端接收事件并调用</h2><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span><br><span class="hljs-keyword">import</span> &#123; login, send &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../utilis/socketmodule.js&#x27;</span> <span class="hljs-comment">//引入utils抛出的两个方法</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">index</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> [user, setUser] = <span class="hljs-title function_">useState</span>(<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-comment">//讲输入框改为受控组件</span><br>  <span class="hljs-keyword">const</span> [title, setTitle] = <span class="hljs-title function_">useState</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;say&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">input</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">onChange</span>=<span class="hljs-string">&#123;(e)</span> =&gt;</span> &#123;</span><br><span class="language-xml">          setUser(e.target.value)</span><br><span class="language-xml">        &#125;&#125;</span><br><span class="language-xml">      /&gt;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> &#123;</span><br><span class="language-xml">          login(&#123; user &#125;)</span><br><span class="language-xml">        &#125;&#125;</span><br><span class="language-xml">      &gt;</span><br><span class="language-xml">        登录</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>//登录并传递参数</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;30&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;10&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;title&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">onChange</span>=<span class="hljs-string">&#123;(e)</span> =&gt;</span> &#123;</span><br><span class="language-xml">          setTitle(e.target.value)</span><br><span class="language-xml">        &#125;&#125;</span><br><span class="language-xml">      &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> &#123;</span><br><span class="language-xml">          send(&#123; user, title &#125;)</span><br><span class="language-xml">        &#125;&#125;</span><br><span class="language-xml">      &gt;</span><br><span class="language-xml">        发送</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      //发送消息并传递参数</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  )<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
